[{"E:\\mern-ecommerce\\flipkart-clone\\src\\index.js":"1","E:\\mern-ecommerce\\flipkart-clone\\src\\App.js":"2","E:\\mern-ecommerce\\flipkart-clone\\src\\reportWebVitals.js":"3","E:\\mern-ecommerce\\flipkart-clone\\src\\store\\index.js":"4","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\index.js":"5","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\category.reducer.js":"6","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\constants.js":"7","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\HomePage\\index.js":"8","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\Header\\index.js":"9","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\MenuHeader\\index.js":"10","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\index.js":"11","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\category.action.js":"12","E:\\mern-ecommerce\\flipkart-clone\\src\\helpers\\axios.js":"13","E:\\mern-ecommerce\\flipkart-clone\\src\\urlConfig.js":"14","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\index.js":"15","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\Layout\\index.js":"16","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\product.action.js":"17","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\product.reducer.js":"18","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js":"19","E:\\mern-ecommerce\\flipkart-clone\\src\\utils\\getParams.js":"20","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js":"21","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Card\\index.js":"22","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\MaterialUI\\index.js":"23","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\auth.action.js":"24","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\auth.reducer.js":"25","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductDetailsPage\\index.js":"26","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CartPage\\index.js":"27","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\cart.reducer.js":"28","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\cart.action.js":"29","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CartPage\\CartItem\\index.js":"30","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\user.action.js":"31","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\user.reducer.js":"32","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\index.js":"33","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\PriceDetails\\index.js":"34","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\AddressForm.js":"35","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\OrderPage\\index.js":"36","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js":"37","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\OrderDetailsPage\\index.js":"38","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Price.js":"39","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Cart.js":"40","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Rating.js":"41"},{"size":641,"mtime":1607178457989,"results":"42","hashOfConfig":"43"},{"size":1609,"mtime":1612091696017,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"43"},{"size":313,"mtime":1612091593295,"results":"46","hashOfConfig":"43"},{"size":479,"mtime":1612091514008,"results":"47","hashOfConfig":"43"},{"size":2367,"mtime":1612091488273,"results":"48","hashOfConfig":"43"},{"size":2666,"mtime":1612089897286,"results":"49","hashOfConfig":"43"},{"size":345,"mtime":1612090735641,"results":"50","hashOfConfig":"43"},{"size":8520,"mtime":1612090017056,"results":"51","hashOfConfig":"43"},{"size":1206,"mtime":1612090172500,"results":"52","hashOfConfig":"43"},{"size":200,"mtime":1612089918625,"results":"53","hashOfConfig":"43"},{"size":785,"mtime":1612089873651,"results":"54","hashOfConfig":"43"},{"size":940,"mtime":1612091254190,"results":"55","hashOfConfig":"43"},{"size":203,"mtime":1612453721334,"results":"56","hashOfConfig":"43"},{"size":921,"mtime":1612091188449,"results":"57","hashOfConfig":"43"},{"size":309,"mtime":1612090075858,"results":"58","hashOfConfig":"43"},{"size":2135,"mtime":1612089946903,"results":"59","hashOfConfig":"43"},{"size":1664,"mtime":1612091536498,"results":"60","hashOfConfig":"43"},{"size":2775,"mtime":1612091106085,"results":"61","hashOfConfig":"43"},{"size":452,"mtime":1609132233501,"results":"62","hashOfConfig":"43"},{"size":2423,"mtime":1612091052512,"results":"63","hashOfConfig":"43"},{"size":668,"mtime":1612090327443,"results":"64","hashOfConfig":"43"},{"size":3697,"mtime":1612090111680,"results":"65","hashOfConfig":"43"},{"size":2870,"mtime":1612093550386,"results":"66","hashOfConfig":"43"},{"size":1421,"mtime":1612091404130,"results":"67","hashOfConfig":"43"},{"size":5401,"mtime":1612090925517,"results":"68","hashOfConfig":"43"},{"size":3628,"mtime":1612090556925,"results":"69","hashOfConfig":"43"},{"size":1159,"mtime":1612091463139,"results":"70","hashOfConfig":"43"},{"size":3840,"mtime":1612089841204,"results":"71","hashOfConfig":"43"},{"size":1552,"mtime":1612090503544,"results":"72","hashOfConfig":"43"},{"size":3902,"mtime":1612089969769,"results":"73","hashOfConfig":"43"},{"size":2244,"mtime":1612091563431,"results":"74","hashOfConfig":"43"},{"size":10461,"mtime":1612090670477,"results":"75","hashOfConfig":"43"},{"size":916,"mtime":1612090262073,"results":"76","hashOfConfig":"43"},{"size":6683,"mtime":1612090631720,"results":"77","hashOfConfig":"43"},{"size":2068,"mtime":1612090819554,"results":"78","hashOfConfig":"43"},{"size":1478,"mtime":1612090995648,"results":"79","hashOfConfig":"43"},{"size":3922,"mtime":1612090764633,"results":"80","hashOfConfig":"43"},{"size":380,"mtime":1612090398427,"results":"81","hashOfConfig":"43"},{"size":672,"mtime":1612090378663,"results":"82","hashOfConfig":"43"},{"size":467,"mtime":1612090420072,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"xlbn6m",{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"86"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"86"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"86"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"E:\\mern-ecommerce\\flipkart-clone\\src\\index.js",[],["186","187"],"E:\\mern-ecommerce\\flipkart-clone\\src\\App.js",["188","189"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport HomePage from \"./containers/HomePage\";\nimport ProductListPage from \"./containers/ProductListPage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn, updateCart } from \"./actions\";\nimport ProductDetailsPage from \"./containers/ProductDetailsPage\";\nimport CartPage from \"./containers/CartPage\";\nimport CheckoutPage from \"./containers/CheckoutPage\";\nimport OrderPage from \"./containers/OrderPage\";\nimport OrderDetailsPage from \"./containers/OrderDetailsPage\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n  }, [auth.authenticate]);\n\n  useEffect(() => {\n    console.log(\"App.js - updateCart\");\n    dispatch(updateCart());\n  }, [auth.authenticate]);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={HomePage} />\n          <Route path=\"/cart\" component={CartPage} />\n          <Route path=\"/checkout\" component={CheckoutPage} />\n          <Route path=\"/account/orders\" component={OrderPage} />\n          <Route path=\"/order_details/:orderId\" component={OrderDetailsPage} />\n          <Route\n            path=\"/:productSlug/:productId/p\"\n            component={ProductDetailsPage}\n          />\n          <Route path=\"/:slug\" component={ProductListPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\mern-ecommerce\\flipkart-clone\\src\\reportWebVitals.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\store\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\category.reducer.js",["190","191","192","193"],"import { categoryConstansts } from \"../actions/constants\";\r\n\r\n const initState = {\r\n     categories: [],\r\n     loading: false,\r\n     error: null\r\n };\r\n\r\n \r\n const buildNewCategories = (parentId, categories, category) => {\r\n     let myCategories = [];\r\n\r\n     if(parentId == undefined){\r\n         return [\r\n             ...categories,\r\n             {\r\n                 _id: category._id,\r\n                 name: category.name,\r\n                 slug: category.slug,\r\n                 children: []\r\n             }\r\n         ];\r\n     }\r\n\r\n     for(let cat of categories){\r\n  \r\n        if(cat._id == parentId){\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, [...cat.children, {\r\n                    _id: category._id,\r\n                    name: category.name,\r\n                    slug: category.slug,\r\n                    parentId: category.parentId,\r\n                    children: category.children\r\n                }], category) : []\r\n            });\r\n        }else{\r\n            myCategories.push({\r\n                ...cat,\r\n                children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\r\n            });\r\n        }\r\n\r\n     }\r\n\r\n     return myCategories;\r\n\r\n }\r\n\r\n export default (state = initState, action) => {\r\n     switch(action.type){\r\n         case categoryConstansts.GET_ALL_CATEGORIES_SUCCESS:\r\n             state = {\r\n                 ...state,\r\n                 categories: action.payload.categories\r\n             }\r\n             break;\r\n         case categoryConstansts.ADD_NEW_CATEGORY_REQUEST:\r\n             state = {\r\n                 ...state,\r\n                 loading: true\r\n             }    \r\n             break;\r\n         case categoryConstansts.ADD_NEW_CATEGORY_SUCCESS:\r\n             const category = action.payload.category;\r\n             const updatedCategories = buildNewCategories(category.parentId, state.categories, category);\r\n             console.log('updatedCategories', updatedCategories);\r\n\r\n             state = {\r\n                 ...state,\r\n                 categories: updatedCategories,\r\n                 loading: false,\r\n             }     \r\n             break;\r\n         case categoryConstansts.ADD_NEW_CATEGORY_FAILURE:\r\n             state = {\r\n                 ...initState\r\n             }    \r\n             break;\r\n     }\r\n\r\n     return state;\r\n }","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\constants.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\HomePage\\index.js",["194","195"],"import React from 'react'\r\nimport Header from '../../components/Header'\r\nimport Layout from '../../components/Layout'\r\nimport MenuHeader from '../../components/MenuHeader'\r\n\r\n/**\r\n* @author\r\n* @function HomePage\r\n**/\r\n\r\nconst HomePage = (props) => {\r\n  return(\r\n    <Layout>\r\n      HomePage\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default HomePage","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\Header\\index.js",["196","197","198","199","200","201","202","203","204","205"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./style.css\";\r\nimport flipkartLogo from \"../../images/logo/flipkart.png\";\r\nimport goldenStar from \"../../images/logo/golden-star.png\";\r\nimport { IoIosArrowDown, IoIosCart, IoIosSearch } from \"react-icons/io\";\r\nimport {\r\n  Modal,\r\n  MaterialInput,\r\n  MaterialButton,\r\n  DropdownMenu,\r\n} from \"../MaterialUI\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, signout, getCartItems, signup as _signup } from \"../../actions\";\r\nimport Cart from \"../UI/Cart\";\r\n\r\n/**\r\n * @author\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  const [loginModal, setLoginModal] = useState(false);\r\n  const [signup, setSignup] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  // state cart value\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const userSignup = () => {\r\n    const user = { firstName, lastName, email, password };\r\n    if (\r\n      firstName === \"\" ||\r\n      lastName === \"\" ||\r\n      email === \"\" ||\r\n      password === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    dispatch(_signup(user));\r\n  };\r\n\r\n  const userLogin = () => {\r\n    if (signup) {\r\n      userSignup();\r\n    } else {\r\n      dispatch(login({ email, password }));\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      setLoginModal(false);\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  // useEffect(() => {\r\n  //   dispatch(getCartItems());\r\n  // }, []);\r\n\r\n  const renderLoggedInMenu = () => {\r\n    return (\r\n      <DropdownMenu\r\n        menu={<a className=\"fullName\">{auth.user.fullName}</a>}\r\n        menus={[\r\n          { label: \"My Profile\", href: \"\", icon: null },\r\n          { label: \"SuperCoin Zone\", href: \"\", icon: null },\r\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\r\n          {\r\n            label: \"Orders\",\r\n            href: `/account/orders`,\r\n            icon: null,\r\n          },\r\n          { label: \"Wishlist\", href: \"\", icon: null },\r\n          { label: \"My Chats\", href: \"\", icon: null },\r\n          { label: \"Coupons\", href: \"\", icon: null },\r\n          { label: \"Rewards\", href: \"\", icon: null },\r\n          { label: \"Notifications\", href: \"\", icon: null },\r\n          { label: \"Gift Cards\", href: \"\", icon: null },\r\n          { label: \"Logout\", href: \"\", icon: null, onClick: logout },\r\n        ]}\r\n      />\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInMenu = () => {\r\n    return (\r\n      <DropdownMenu\r\n        menu={\r\n          <a\r\n            className=\"loginButton\"\r\n            onClick={() => {\r\n              setSignup(false);\r\n              setLoginModal(true);\r\n            }}\r\n          >\r\n            Login\r\n          </a>\r\n        }\r\n        menus={[\r\n          { label: \"My Profile\", href: \"\", icon: null },\r\n          { label: \"Flipkart Plus Zone\", href: \"\", icon: null },\r\n          {\r\n            label: \"Orders\",\r\n            href: `/account/orders`,\r\n            icon: null,\r\n            onClick: () => {\r\n              !auth.authenticate && setLoginModal(true);\r\n            },\r\n          },\r\n          { label: \"Wishlist\", href: \"\", icon: null },\r\n          { label: \"Rewards\", href: \"\", icon: null },\r\n          { label: \"Gift Cards\", href: \"\", icon: null },\r\n        ]}\r\n        firstMenu={\r\n          <div className=\"firstmenu\">\r\n            <span>New Customer?</span>\r\n            <a\r\n              onClick={() => {\r\n                setLoginModal(true);\r\n                setSignup(true);\r\n              }}\r\n              style={{ color: \"#2874f0\" }}\r\n            >\r\n              Sign Up\r\n            </a>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Modal visible={loginModal} onClose={() => setLoginModal(false)}>\r\n        <div className=\"authContainer\">\r\n          <div className=\"row\">\r\n            <div className=\"leftspace\">\r\n              <h2>Login</h2>\r\n              <p>Get access to your Orders, Wishlist and Recommendations</p>\r\n            </div>\r\n            <div className=\"rightspace\">\r\n              <div className=\"loginInputContainer\">\r\n                {auth.error && (\r\n                  <div style={{ color: \"red\", fontSize: 12 }}>{auth.error}</div>\r\n                )}\r\n                {signup && (\r\n                  <MaterialInput\r\n                    type=\"text\"\r\n                    label=\"First Name\"\r\n                    value={firstName}\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                )}\r\n                {signup && (\r\n                  <MaterialInput\r\n                    type=\"text\"\r\n                    label=\"Last Name\"\r\n                    value={lastName}\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                )}\r\n\r\n                <MaterialInput\r\n                  type=\"text\"\r\n                  label=\"Email/Mobile Number\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <MaterialInput\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  // rightElement={<a href=\"#\">Forgot?</a>}\r\n                />\r\n                <MaterialButton\r\n                  title={signup ? \"Register\" : \"Login\"}\r\n                  bgColor=\"#fb641b\"\r\n                  textColor=\"#ffffff\"\r\n                  style={{\r\n                    margin: \"40px 0 20px 0\",\r\n                  }}\r\n                  onClick={userLogin}\r\n                />\r\n                <p style={{ textAlign: \"center\" }}>OR</p>\r\n                <MaterialButton\r\n                  title=\"Request OTP\"\r\n                  bgColor=\"#ffffff\"\r\n                  textColor=\"#2874f0\"\r\n                  style={{\r\n                    margin: \"20px 0\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"subHeader\">\r\n        {/* Logo  */}\r\n        <div className=\"logo\">\r\n          <a href=\"\">\r\n            <img src={flipkartLogo} className=\"logoimage\" alt=\"\" />\r\n          </a>\r\n          <a style={{ marginTop: \"-10px\" }}>\r\n            <span className=\"exploreText\">Explore</span>\r\n            <span className=\"plusText\">Plus</span>\r\n            <img src={goldenStar} className=\"goldenStar\" alt=\"\" />\r\n          </a>\r\n        </div>\r\n        {/* logo ends here */}\r\n\r\n        {/* search component */}\r\n        <div\r\n          style={{\r\n            padding: \"0 10px\",\r\n          }}\r\n        >\r\n          <div className=\"searchInputContainer\">\r\n            <input\r\n              className=\"searchInput\"\r\n              placeholder={\"search for products, brands and more\"}\r\n            />\r\n            <div className=\"searchIconContainer\">\r\n              <IoIosSearch\r\n                style={{\r\n                  color: \"#2874f0\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* search component ends here */}\r\n\r\n        {/* right side menu */}\r\n        <div className=\"rightMenu\">\r\n          {auth.authenticate ? renderLoggedInMenu() : renderNonLoggedInMenu()}\r\n          <DropdownMenu\r\n            menu={\r\n              <a className=\"more\">\r\n                <span>More</span>\r\n                <IoIosArrowDown />\r\n              </a>\r\n            }\r\n            menus={[\r\n              { label: \"Notification Preference\", href: \"\", icon: null },\r\n              { label: \"Sell on flipkart\", href: \"\", icon: null },\r\n              { label: \"24x7 Customer Care\", href: \"\", icon: null },\r\n              { label: \"Advertise\", href: \"\", icon: null },\r\n              { label: \"Download App\", href: \"\", icon: null },\r\n            ]}\r\n          />\r\n          <div>\r\n            <a href={`/cart`} className=\"cart\">\r\n              <Cart count={Object.keys(cart.cartItems).length} />\r\n              <span style={{ margin: \"0 10px\" }}>Cart</span>\r\n            </a>\r\n          </div>\r\n        </div>\r\n        {/* right side menu ends here */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\MenuHeader\\index.js",["206"],"import React, { useEffect } from 'react';\r\nimport './style.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getAllCategory } from '../../actions';\r\n\r\n/**\r\n* @author\r\n* @function MenuHeader\r\n**/\r\n\r\nconst MenuHeader = (props) => {\r\n\r\n  const category = useSelector(state => state.category);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category of categories) {\r\n      myCategories.push(\r\n        <li key={category.name}>\r\n          {\r\n            category.parentId ? <a\r\n              href={`/${category.slug}?cid=${category._id}&type=${category.type}`}>\r\n              {category.name}\r\n            </a> :\r\n            <span>{category.name}</span>\r\n          }\r\n          {category.children.length > 0 ? (<ul>{renderCategories(category.children)}</ul>) : null}\r\n        </li>\r\n      );\r\n    }\r\n    return myCategories;\r\n  }\r\n  return (\r\n    <div className=\"menuHeader\">\r\n      <ul>\r\n        {category.categories.length > 0 ? renderCategories(category.categories) : null}\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default MenuHeader","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\category.action.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\helpers\\axios.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\urlConfig.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\components\\Layout\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\product.action.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\product.reducer.js",["207","208"],"import { productConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  products: [],\r\n  priceRange: {},\r\n  productsByPrice: {},\r\n  pageRequest: false,\r\n  page: {},\r\n  error: null,\r\n  productDetails: {},\r\n  loading: false,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case productConstants.GET_PRODUCTS_BY_SLUG:\r\n      state = {\r\n        ...state,\r\n        products: action.payload.products,\r\n        priceRange: action.payload.priceRange,\r\n        productsByPrice: {\r\n          ...action.payload.productsByPrice,\r\n        },\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_PAGE_REQUEST:\r\n      state = {\r\n        ...state,\r\n        pageRequest: true,\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_PAGE_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        page: action.payload.page,\r\n        pageRequest: false,\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_PAGE_FAILURE:\r\n      state = {\r\n        ...state,\r\n        pageRequest: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        productDetails: action.payload.productDetails,\r\n      };\r\n      break;\r\n    case productConstants.GET_PRODUCT_DETAILS_BY_ID_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductStore\\index.js",["209","210"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductsBySlug } from \"../../../actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport { MaterialButton } from \"../../../components/MaterialUI\";\r\nimport Rating from \"../../../components/UI/Rating\";\r\nimport Price from \"../../../components/UI/Price\";\r\n\r\n/**\r\n * @author\r\n * @function ProductStore\r\n **/\r\n\r\nconst ProductStore = (props) => {\r\n  const product = useSelector((state) => state.product);\r\n  const priceRange = product.priceRange;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getProductsBySlug(match.params.slug));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(product.productsByPrice).map((key, index) => {\r\n        return (\r\n          <Card\r\n            headerLeft={`${props.match.params.slug} mobile under ${priceRange[key]}`}\r\n            headerRight={\r\n              <MaterialButton\r\n                title={\"VIEW ALL\"}\r\n                style={{\r\n                  width: \"96px\",\r\n                }}\r\n                bgColor=\"#2874f0\"\r\n                fontSize=\"12px\"\r\n              />\r\n            }\r\n            style={{\r\n              width: \"calc(100% - 40px)\",\r\n              margin: \"20px\",\r\n            }}\r\n          >\r\n            <div style={{ display: \"flex\" }}>\r\n              {product.productsByPrice[key].map((product) => (\r\n                <Link\r\n                  to={`/${product.slug}/${product._id}/p`}\r\n                  style={{\r\n                    display: \"block\",\r\n                    textDecoration: \"none\",\r\n                    color: \"#000\",\r\n                  }}\r\n                  className=\"productContainer\"\r\n                >\r\n                  <div className=\"productImgContainer\">\r\n                    <img src={product.productPictures[0].img} alt=\"\" />\r\n                  </div>\r\n                  <div className=\"productInfo\">\r\n                    <div style={{ margin: \"10px 0\" }}>{product.name}</div>\r\n                    <div>\r\n                      <Rating value=\"4.3\" />\r\n                      &nbsp;&nbsp;\r\n                      <span\r\n                        style={{\r\n                          color: \"#777\",\r\n                          fontWeight: \"500\",\r\n                          fontSize: \"12px\",\r\n                        }}\r\n                      >\r\n                        (3353)\r\n                      </span>\r\n                    </div>\r\n                    <Price value={product.price} />\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </Card>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductStore;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\utils\\getParams.js",["211"],"export default (query) => {\r\n    if(query){\r\n        const queryString = query.split(\"?\")[1];\r\n        if(queryString.length > 0){\r\n            const params = queryString.split(\"&\");\r\n            const paramsObj = {};\r\n            params.forEach(param => {\r\n                const keyValue = param.split(\"=\");\r\n                paramsObj[keyValue[0]] = keyValue[1];\r\n            });\r\n\r\n            return paramsObj;\r\n        }\r\n    }\r\n\r\n    return {};\r\n}","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ProductPage\\index.js",["212"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductPage } from '../../../actions';\r\nimport getParams from '../../../utils/getParams';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport Card from '../../../components/UI/Card';\r\n\r\n/**\r\n* @author\r\n* @function ProductPage\r\n**/\r\n\r\nconst ProductPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const product = useSelector(state => state.product);\r\n    const { page } = product;\r\n\r\n    useEffect(() => {\r\n        const params = getParams(props.location.search);\r\n        console.log({params});\r\n        const payload = {\r\n            params\r\n        }\r\n        dispatch(getProductPage(payload));\r\n    }, []);\r\n\r\n\r\n  return(\r\n    <div style={{ margin: '0 10px' }}>\r\n        <h3>{page.title}</h3>\r\n        <Carousel\r\n            renderThumbs={() => {}}\r\n        >\r\n            {\r\n                page.banners && page.banners.map((banner, index) => \r\n                    <a \r\n                        key={index}\r\n                        style={{ display: 'block' }}\r\n                        href={banner.navigateTo}\r\n                    >   \r\n                        <img src={banner.img} alt=\"\" />\r\n                    </a>    \r\n                )\r\n            }\r\n        </Carousel>\r\n        <div style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            flexWrap: 'wrap',\r\n            margin: '10px 0'\r\n        }}>\r\n            {\r\n                page.products && page.products.map((product, index) =>\r\n                    <Card \r\n                        key={index}\r\n                        style={{\r\n                            width: '400px',\r\n                            height: '200px',\r\n                            margin: '5px'\r\n                        }}\r\n                    >\r\n                        <img style={{\r\n                            width: '100%',\r\n                            height: '100%'\r\n                        }} src={product.img} alt=\"\" />\r\n                    </Card>     \r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default ProductPage","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Card\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\components\\MaterialUI\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\auth.action.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\auth.reducer.js",["213","214"],"import { authConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    token: null,\r\n    user: {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        picture: ''\r\n    },\r\n    authenticate: false,\r\n    authenticating: false,\r\n    loading: false,\r\n    error: null,\r\n    message: ''\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case authConstants.LOGIN_REQUEST:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case authConstants.LOGIN_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                authenticate: true,\r\n                authenticating: false\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_REQUEST:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_SUCCESS:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case authConstants.LOGOUT_FAILURE:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                loading: false\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n\r\n    return state;\r\n}","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductDetailsPage\\index.js",["215","216","217","218","219","220"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getProductDetailsById } from '../../actions';\r\nimport Layout from '../../components/Layout';\r\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from 'react-icons/io';\r\nimport { BiRupee } from 'react-icons/bi';\r\nimport { AiFillThunderbolt } from 'react-icons/ai';\r\nimport { MaterialButton } from '../../components/MaterialUI';\r\nimport './style.css';\r\nimport { generatePublicUrl } from '../../urlConfig';\r\nimport { addToCart } from '../../actions';\r\n\r\n/**\r\n * @author\r\n * @function ProductDetailsPage\r\n **/\r\n\r\nconst ProductDetailsPage = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const product = useSelector(state => state.product);\r\n\r\n    useEffect(() => {\r\n        const { productId } = props.match.params;\r\n        console.log(props);\r\n        const payload = {\r\n            params: {\r\n                productId\r\n            }\r\n        }\r\n        dispatch(getProductDetailsById(payload));\r\n    }, []);\r\n\r\n    if (Object.keys(product.productDetails).length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            {/*<div>{product.productDetails.name}</div> */} \r\n            <div className=\"productDescriptionContainer\">\r\n                <div className=\"flexRow\">\r\n                    <div className=\"verticalImageStack\">\r\n                        {\r\n                            product.productDetails.productPictures.map((thumb, index) =>\r\n                                <div className=\"thumbnail\">\r\n                                    <img src={generatePublicUrl(thumb.img)} alt={thumb.img} />\r\n                                </div>\r\n                            ) \r\n                        }\r\n                    </div>\r\n                    <div className=\"productDescContainer\">\r\n                        <div className=\"productDescImgContainer\">\r\n                            <img src={generatePublicUrl(product.productDetails.productPictures[0].img)} />\r\n                        </div>\r\n\r\n                        {/* action buttons */}\r\n                        <div className=\"flexRow\">\r\n                            <MaterialButton\r\n                                title=\"ADD TO CART\"\r\n                                bgColor=\"#ff9f00\"\r\n                                textColor=\"#ffffff\"\r\n                                style={{\r\n                                    marginRight: \"5px\",\r\n                                }}\r\n                                icon={<IoMdCart />}\r\n                                onClick={() => {\r\n                                    const { _id, name, price} = product.productDetails;\r\n                                    const img = product.productDetails.productPictures[0].img;\r\n                                    dispatch(addToCart({ _id, name, price, img }));\r\n                                    props.history.push(`/cart`);\r\n                                }}\r\n                            />\r\n                            <MaterialButton\r\n                                title=\"BUY NOW\"\r\n                                bgColor=\"#fb641b\"\r\n                                textColor=\"#ffffff\"\r\n                                style={{\r\n                                    marginLeft: \"5px\",\r\n                                }}\r\n                                icon={<AiFillThunderbolt />}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n\r\n                    {/* home > category > subCategory > productName */}\r\n                    <div className=\"breed\">\r\n                        <ul>\r\n                            <li><a href=\"#\">Home</a><IoIosArrowForward /></li>\r\n                            <li><a href=\"#\">Mobiles</a><IoIosArrowForward /></li>\r\n                            <li><a href=\"#\">Samsung</a><IoIosArrowForward /></li>\r\n                            <li><a href=\"#\">{product.productDetails.name}</a></li>\r\n                        </ul>\r\n                    </div>\r\n                    {/* product description */}\r\n                    <div className=\"productDetails\">\r\n                        <p className=\"productTitle\">{product.productDetails.name}</p>\r\n                    <div>\r\n                        <span className=\"ratingCount\">4.3 <IoIosStar /></span>\r\n                        <span className=\"ratingNumbersReviews\">72,234 Ratings & 8,140 Reviews</span>\r\n                    </div>\r\n                        <div className=\"extraOffer\">Extra <BiRupee />4500 off </div>\r\n                        <div className=\"flexRow priceContainer\">\r\n                            <span className=\"price\"><BiRupee />{product.productDetails.price}</span>\r\n                            <span className=\"discount\" style={{ margin: \"0 10px\" }}>22% off</span>\r\n                            {/* <span>i</span> */}\r\n                            </div>\r\n                        <div>\r\n                            <p style={{\r\n                              color: '#212121',\r\n                              fontSize: '14px',\r\n                              fontWeight: '600',\r\n                              }}>Available Offers</p>\r\n                            <p style={{ display: 'flex' }}>\r\n                              <span style={{\r\n                                width: '100px',\r\n                                fontSize: '12px',\r\n                                color: '#878787',\r\n                                fontWeight: '600',\r\n                                marginRight: '20px',\r\n                            }}>Description</span>\r\n                            <span style={{\r\n                              fontSize: '12px',\r\n                              color: '#212121',\r\n                            }}>{product.productDetails.description}</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default ProductDetailsPage;","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CartPage\\index.js",["221"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport CartItem from \"./CartItem\";\r\nimport { addToCart, getCartItems, removeCartItem } from \"../../actions\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\n\r\nimport \"./style.css\";\r\nimport { MaterialButton } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function CartPage\r\n **/\r\n\r\n/*\r\nBefore Login\r\nAdd product to cart\r\nsave in localStorage\r\nwhen try to checkout ask for credentials and \r\nif logged in then add products to users cart database from localStorage\r\n\r\n\r\n*/\r\n\r\nconst CartPage = (props) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const auth = useSelector((state) => state.auth);\r\n  // const cartItems = cart.cartItems;\r\n  const [cartItems, setCartItems] = useState(cart.cartItems);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setCartItems(cart.cartItems);\r\n  }, [cart.cartItems]);\r\n\r\n  useEffect(() => {\r\n    if (auth.authenticate) {\r\n      dispatch(getCartItems());\r\n    }\r\n  }, [auth.authenticate]);\r\n\r\n  const onQuantityIncrement = (_id, qty) => {\r\n    //console.log({_id, qty});\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, 1));\r\n  };\r\n\r\n  const onQuantityDecrement = (_id, qty) => {\r\n    const { name, price, img } = cartItems[_id];\r\n    dispatch(addToCart({ _id, name, price, img }, -1));\r\n  };\r\n\r\n  const onRemoveCartItem = (_id) => {\r\n    dispatch(removeCartItem({ productId: _id }));\r\n  };\r\n\r\n  if (props.onlyCartItems) {\r\n    return (\r\n      <>\r\n        {Object.keys(cartItems).map((key, index) => (\r\n          <CartItem\r\n            key={index}\r\n            cartItem={cartItems[key]}\r\n            onQuantityInc={onQuantityIncrement}\r\n            onQuantityDec={onQuantityDecrement}\r\n          />\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <Card\r\n          headerLeft={`My Cart`}\r\n          headerRight={<div>Deliver to</div>}\r\n          style={{ width: \"calc(100% - 400px)\", overflow: \"hidden\" }}\r\n        >\r\n          {Object.keys(cartItems).map((key, index) => (\r\n            <CartItem\r\n              key={index}\r\n              cartItem={cartItems[key]}\r\n              onQuantityInc={onQuantityIncrement}\r\n              onQuantityDec={onQuantityDecrement}\r\n              onRemoveCartItem={onRemoveCartItem}\r\n            />\r\n          ))}\r\n\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              background: \"#ffffff\",\r\n              justifyContent: \"flex-end\",\r\n              boxShadow: \"0 0 10px 10px #eee\",\r\n              padding: \"10px 0\",\r\n              boxSizing: \"border-box\",\r\n            }}\r\n          >\r\n            <div style={{ width: \"250px\" }}>\r\n              <MaterialButton\r\n                title=\"PLACE ORDER\"\r\n                onClick={() => props.history.push(`/checkout`)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\cart.reducer.js",["222","223"],"import { cartConstants } from '../actions/constants';\r\n\r\nconst initState = {\r\n    cartItems: {\r\n        // 123: {\r\n        //     _id: 123,\r\n        //     name: 'Samsung mobile',\r\n        //     img: 'some.jpg',\r\n        //     price: 200,\r\n        //     qty: 1,\r\n        // }\r\n    },\r\n    updatingCart: false,\r\n    error: null\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n    switch(action.type){\r\n        case cartConstants.ADD_TO_CART_REQUEST:\r\n            state = {\r\n                ...state,\r\n                updatingCart: true\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_SUCCESS:\r\n            state = {\r\n                ...state,\r\n                cartItems: action.payload.cartItems,\r\n                updatingCart: false\r\n            }\r\n            break;\r\n        case cartConstants.ADD_TO_CART_FAILURE:\r\n            state = {\r\n                ...state,\r\n                updatingCart: false,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        case cartConstants.RESET_CART:\r\n            state = {\r\n                ...initState\r\n            }\r\n    }\r\n    return state;\r\n}","E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\cart.action.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CartPage\\CartItem\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\actions\\user.action.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\reducers\\user.reducer.js",["224","225"],"import { userConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  address: [],\r\n  orders: [],\r\n  orderDetails: {},\r\n  error: null,\r\n  loading: false,\r\n  orderFetching: false,\r\n  placedOrderId: null,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case userConstants.GET_USER_ADDRESS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        address: action.payload.address,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ADDRESS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        address: action.payload.address,\r\n        loading: false,\r\n      };\r\n      break;\r\n    case userConstants.ADD_USER_ADDRESS_FAILURE:\r\n      state = {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_REQUEST:\r\n      state = {\r\n        ...state,\r\n        orderFetching: true,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        orderFetching: false,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_REQUEST:\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        orderDetails: action.payload.order,\r\n      };\r\n      break;\r\n    case userConstants.GET_USER_ORDER_DETAILS_FAILURE:\r\n      break;\r\n    case userConstants.ADD_USER_ORDER_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        placedOrderId: action.payload.order._id,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\index.js",["226","227"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addOrder, getAddress, getCartItems } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport {\r\n  Anchor,\r\n  MaterialButton,\r\n  MaterialInput,\r\n} from \"../../components/MaterialUI\";\r\nimport PriceDetails from \"../../components/PriceDetails\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport CartPage from \"../CartPage\";\r\nimport AddressForm from \"./AddressForm\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function CheckoutPage\r\n **/\r\n\r\nconst CheckoutStep = (props) => {\r\n  return (\r\n    <div className=\"checkoutStep\">\r\n      <div\r\n        onClick={props.onClick}\r\n        className={`checkoutHeader ${props.active && \"active\"}`}\r\n      >\r\n        <div>\r\n          <span className=\"stepNumber\">{props.stepNumber}</span>\r\n          <span className=\"stepTitle\">{props.title}</span>\r\n        </div>\r\n      </div>\r\n      {props.body && props.body}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Address = ({\r\n  adr,\r\n  selectAddress,\r\n  enableAddressEditForm,\r\n  confirmDeliveryAddress,\r\n  onAddressSubmit,\r\n}) => {\r\n  return (\r\n    <div className=\"flexRow addressContainer\">\r\n      <div>\r\n        <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\r\n      </div>\r\n      <div className=\"flexRow sb addressinfo\">\r\n        {!adr.edit ? (\r\n          <div style={{ width: \"100%\" }}>\r\n            <div className=\"addressDetail\">\r\n              <div>\r\n                <span className=\"addressName\">{adr.name}</span>\r\n                <span className=\"addressType\">{adr.addressType}</span>\r\n                <span className=\"addressMobileNumber\">{adr.mobileNumber}</span>\r\n              </div>\r\n              {adr.selected && (\r\n                <Anchor\r\n                  name=\"EDIT\"\r\n                  onClick={() => enableAddressEditForm(adr)}\r\n                  style={{\r\n                    fontWeight: \"500\",\r\n                    color: \"#2874f0\",\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"fullAddress\">\r\n              {adr.address} <br /> {`${adr.state} - ${adr.pinCode}`}\r\n            </div>\r\n            {adr.selected && (\r\n              <MaterialButton\r\n                title=\"DELIVERY HERE\"\r\n                onClick={() => confirmDeliveryAddress(adr)}\r\n                style={{\r\n                  width: \"200px\",\r\n                  margin: \"10px 0\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <AddressForm\r\n            withoutLayout={true}\r\n            onSubmitForm={onAddressSubmit}\r\n            initialData={adr}\r\n            onCancel={() => {}}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CheckoutPage = (props) => {\r\n  const user = useSelector((state) => state.user);\r\n  const auth = useSelector((state) => state.auth);\r\n  const [newAddress, setNewAddress] = useState(false);\r\n  const [address, setAddress] = useState([]);\r\n  const [confirmAddress, setConfirmAddress] = useState(false);\r\n  const [selectedAddress, setSelectedAddress] = useState(null);\r\n  const [orderSummary, setOrderSummary] = useState(false);\r\n  const [orderConfirmation, setOrderConfirmation] = useState(false);\r\n  const [paymentOption, setPaymentOption] = useState(false);\r\n  const [confirmOrder, setConfirmOrder] = useState(false);\r\n  const cart = useSelector((state) => state.cart);\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddressSubmit = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const selectAddress = (addr) => {\r\n    //console.log(addr);\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id\r\n        ? { ...adr, selected: true }\r\n        : { ...adr, selected: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const confirmDeliveryAddress = (addr) => {\r\n    setSelectedAddress(addr);\r\n    setConfirmAddress(true);\r\n    setOrderSummary(true);\r\n  };\r\n\r\n  const enableAddressEditForm = (addr) => {\r\n    const updatedAddress = address.map((adr) =>\r\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\r\n    );\r\n    setAddress(updatedAddress);\r\n  };\r\n\r\n  const userOrderConfirmation = () => {\r\n    setOrderConfirmation(true);\r\n    setOrderSummary(false);\r\n    setPaymentOption(true);\r\n  };\r\n\r\n  const onConfirmOrder = () => {\r\n    const totalAmount = Object.keys(cart.cartItems).reduce(\r\n      (totalPrice, key) => {\r\n        const { price, qty } = cart.cartItems[key];\r\n        return totalPrice + price * qty;\r\n      },\r\n      0\r\n    );\r\n    const items = Object.keys(cart.cartItems).map((key) => ({\r\n      productId: key,\r\n      payablePrice: cart.cartItems[key].price,\r\n      purchasedQty: cart.cartItems[key].qty,\r\n    }));\r\n    const payload = {\r\n      addressId: selectedAddress._id,\r\n      totalAmount,\r\n      items,\r\n      paymentStatus: \"pending\",\r\n      paymentType: \"cod\",\r\n    };\r\n\r\n    console.log(payload);\r\n    dispatch(addOrder(payload));\r\n    setConfirmOrder(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    auth.authenticate && dispatch(getAddress());\r\n    auth.authenticate && dispatch(getCartItems());\r\n  }, [auth.authenticate]);\r\n\r\n  useEffect(() => {\r\n    const address = user.address.map((adr) => ({\r\n      ...adr,\r\n      selected: false,\r\n      edit: false,\r\n    }));\r\n    setAddress(address);\r\n    //user.address.length === 0 && setNewAddress(true);\r\n  }, [user.address]);\r\n\r\n  useEffect(() => {\r\n    if (confirmOrder && user.placedOrderId) {\r\n      props.history.push(`/order_details/${user.placedOrderId}`);\r\n    }\r\n  }, [user.placedOrderId]);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"cartContainer\" style={{ alignItems: \"flex-start\" }}>\r\n        <div className=\"checkoutContainer\">\r\n          {/* check if user logged in or not */}\r\n          <CheckoutStep\r\n            stepNumber={\"1\"}\r\n            title={\"LOGIN\"}\r\n            active={!auth.authenticate}\r\n            body={\r\n              auth.authenticate ? (\r\n                <div className=\"loggedInId\">\r\n                  <span style={{ fontWeight: 500 }}>{auth.user.fullName}</span>\r\n                  <span style={{ margin: \"0 5px\" }}>{auth.user.email}</span>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <MaterialInput label=\"Email\" />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n          <CheckoutStep\r\n            stepNumber={\"2\"}\r\n            title={\"DELIVERY ADDRESS\"}\r\n            active={!confirmAddress && auth.authenticate}\r\n            body={\r\n              <>\r\n                {confirmAddress ? (\r\n                  <div className=\"stepCompleted\">{`${selectedAddress.name} ${selectedAddress.address} - ${selectedAddress.pinCode}`}</div>\r\n                ) : (\r\n                  address.map((adr) => (\r\n                    <Address\r\n                      selectAddress={selectAddress}\r\n                      enableAddressEditForm={enableAddressEditForm}\r\n                      confirmDeliveryAddress={confirmDeliveryAddress}\r\n                      onAddressSubmit={onAddressSubmit}\r\n                      adr={adr}\r\n                    />\r\n                  ))\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n\r\n          {/* AddressForm */}\r\n          {confirmAddress ? null : newAddress ? (\r\n            <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => {}} />\r\n          ) : auth.authenticate ? (\r\n            <CheckoutStep\r\n              stepNumber={\"+\"}\r\n              title={\"ADD NEW ADDRESS\"}\r\n              active={false}\r\n              onClick={() => setNewAddress(true)}\r\n            />\r\n          ) : null}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"3\"}\r\n            title={\"ORDER SUMMARY\"}\r\n            active={orderSummary}\r\n            body={\r\n              orderSummary ? (\r\n                <CartPage onlyCartItems={true} />\r\n              ) : orderConfirmation ? (\r\n                <div className=\"stepCompleted\">\r\n                  {Object.keys(cart.cartItems).length} items\r\n                </div>\r\n              ) : null\r\n            }\r\n          />\r\n\r\n          {orderSummary && (\r\n            <Card\r\n              style={{\r\n                margin: \"10px 0\",\r\n              }}\r\n            >\r\n              <div\r\n                className=\"flexRow sb\"\r\n                style={{\r\n                  padding: \"20px\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\" }}>\r\n                  Order confirmation email will be sent to{\" \"}\r\n                  <strong>{auth.user.email}</strong>\r\n                </p>\r\n                <MaterialButton\r\n                  title=\"CONTINUE\"\r\n                  onClick={userOrderConfirmation}\r\n                  style={{\r\n                    width: \"200px\",\r\n                  }}\r\n                />\r\n              </div>\r\n            </Card>\r\n          )}\r\n\r\n          <CheckoutStep\r\n            stepNumber={\"4\"}\r\n            title={\"PAYMENT OPTIONS\"}\r\n            active={paymentOption}\r\n            body={\r\n              paymentOption && (\r\n                <div>\r\n                  <div\r\n                    className=\"flexRow\"\r\n                    style={{\r\n                      alignItems: \"center\",\r\n                      padding: \"20px\",\r\n                    }}\r\n                  >\r\n                    <input type=\"radio\" name=\"paymentOption\" value=\"cod\" />\r\n                    <div>Cash on delivery</div>\r\n                  </div>\r\n                  <MaterialButton\r\n                    title=\"CONFIRM ORDER\"\r\n                    onClick={onConfirmOrder}\r\n                    style={{\r\n                      width: \"200px\",\r\n                      margin: \"0 0 20px 20px\",\r\n                    }}\r\n                  />\r\n                </div>\r\n              )\r\n            }\r\n          />\r\n        </div>\r\n\r\n        {/* Price Component */}\r\n        <PriceDetails\r\n          totalItem={Object.keys(cart.cartItems).reduce(function (qty, key) {\r\n            return qty + cart.cartItems[key].qty;\r\n          }, 0)}\r\n          totalPrice={Object.keys(cart.cartItems).reduce((totalPrice, key) => {\r\n            const { price, qty } = cart.cartItems[key];\r\n            return totalPrice + price * qty;\r\n          }, 0)}\r\n        />\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default CheckoutPage;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\PriceDetails\\index.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\CheckoutPage\\AddressForm.js",["228","229"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addAddress } from \"../../actions\";\r\nimport { MaterialButton, MaterialInput } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function AddressForm\r\n **/\r\n\r\nconst AddressForm = (props) => {\r\n  const { initialData } = props;\r\n  const [name, setName] = useState(initialData ? initialData.name : \"\");\r\n  const [mobileNumber, setMobileNumber] = useState(\r\n    initialData ? initialData.mobileNumber : \"\"\r\n  );\r\n  const [pinCode, setPinCode] = useState(\r\n    initialData ? initialData.pinCode : \"\"\r\n  );\r\n  const [locality, setLocality] = useState(\r\n    initialData ? initialData.locality : \"\"\r\n  );\r\n  const [address, setAddress] = useState(\r\n    initialData ? initialData.address : \"\"\r\n  );\r\n  const [cityDistrictTown, setCityDistrictTown] = useState(\r\n    initialData ? initialData.cityDistrictTown : \"\"\r\n  );\r\n  const [state, setState] = useState(initialData ? initialData.state : \"\");\r\n  const [landmark, setLandmark] = useState(\r\n    initialData ? initialData.landmark : \"\"\r\n  );\r\n  const [alternatePhone, setAlternatePhone] = useState(\r\n    initialData ? initialData.alternatePhone : \"\"\r\n  );\r\n  const [addressType, setAddressType] = useState(\r\n    initialData ? initialData.addressType : \"\"\r\n  );\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [submitFlag, setSubmitFlag] = useState(false);\r\n  const [id, setId] = useState(initialData ? initialData._id : \"\");\r\n\r\n  const inputContainer = {\r\n    width: \"100%\",\r\n    marginRight: 10,\r\n  };\r\n\r\n  const onAddressSubmit = (e) => {\r\n    const payload = {\r\n      address: {\r\n        name,\r\n        mobileNumber,\r\n        pinCode,\r\n        locality,\r\n        address,\r\n        cityDistrictTown,\r\n        state,\r\n        landmark,\r\n        alternatePhone,\r\n        addressType,\r\n      },\r\n    };\r\n    console.log(payload);\r\n    if (id) {\r\n      payload.address._id = id;\r\n    }\r\n    dispatch(addAddress(payload));\r\n    setSubmitFlag(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"addressCount\", user.address);\r\n    if (submitFlag) {\r\n      console.log(\"where are we\", user);\r\n      let _address = {};\r\n      if (id) {\r\n        _address = {\r\n          _id: id,\r\n          name,\r\n          mobileNumber,\r\n          pinCode,\r\n          locality,\r\n          address,\r\n          cityDistrictTown,\r\n          state,\r\n          landmark,\r\n          alternatePhone,\r\n          addressType,\r\n        };\r\n      } else {\r\n        _address = user.address.slice(user.address.length - 1)[0];\r\n      }\r\n\r\n      props.onSubmitForm(_address);\r\n    }\r\n  }, [user.address]);\r\n\r\n  const renderAddressForm = () => {\r\n    return (\r\n      <>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Name\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"10-digit mobile number\"\r\n              value={mobileNumber}\r\n              onChange={(e) => setMobileNumber(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Pincode\"\r\n              value={pinCode}\r\n              onChange={(e) => setPinCode(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Locality\"\r\n              value={locality}\r\n              onChange={(e) => setLocality(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Address\"\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"City/District/Town\"\r\n              value={cityDistrictTown}\r\n              onChange={(e) => setCityDistrictTown(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"State\"\r\n              value={state}\r\n              onChange={(e) => setState(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Landmark (Optional)\"\r\n              value={landmark}\r\n              onChange={(e) => setLandmark(e.target.value)}\r\n            />\r\n          </div>\r\n          <div style={inputContainer}>\r\n            <MaterialInput\r\n              label=\"Alternate Phone (Optional)\"\r\n              value={alternatePhone}\r\n              onChange={(e) => setAlternatePhone(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Address Type</label>\r\n          <div className=\"flexRow\">\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"home\")}\r\n                name=\"addressType\"\r\n                value=\"home\"\r\n              />\r\n              <span>Home</span>\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"radio\"\r\n                onClick={() => setAddressType(\"work\")}\r\n                name=\"addressType\"\r\n                value=\"work\"\r\n              />\r\n              <span>Work</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"flexRow\">\r\n          <MaterialButton\r\n            title=\"SAVE AND DELIVER HERE\"\r\n            onClick={onAddressSubmit}\r\n            style={{\r\n              width: \"250px\",\r\n              margin: \"20px 0\",\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  if (props.withoutLayout) {\r\n    return <div>{renderAddressForm()}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"checkoutStep\" style={{ background: \"#f5faff\" }}>\r\n      <div className={`checkoutHeader`}>\r\n        <div>\r\n          <span className=\"stepNumber\">+</span>\r\n          <span className=\"stepTitle\">{\"ADD NEW ADDRESS\"}</span>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          padding: \"0 60px\",\r\n          paddingBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        {renderAddressForm()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\OrderPage\\index.js",["230","231"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrders } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\n\r\nimport \"./style.css\";\r\nimport { Breed } from \"../../components/MaterialUI\";\r\n\r\n/**\r\n * @author\r\n * @function OrderPage\r\n **/\r\n\r\nconst OrderPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrders());\r\n  }, []);\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <Layout>\r\n      <div style={{ maxWidth: \"1160px\", margin: \"5px auto\" }}>\r\n        <Breed\r\n          breed={[\r\n            { name: \"Home\", href: \"/\" },\r\n            { name: \"My Account\", href: \"/account\" },\r\n            { name: \"My Orders\", href: \"/account/orders\" },\r\n          ]}\r\n          breedIcon={<IoIosArrowForward />}\r\n        />\r\n        {user.orders.map((order) => {\r\n          return order.items.map((item) => (\r\n            <Card style={{ display: \"block\", margin: \"5px 0\" }}>\r\n              <Link\r\n                to={`/order_details/${order._id}`}\r\n                className=\"orderItemContainer\"\r\n              >\r\n                <div className=\"orderImgContainer\">\r\n                  <img\r\n                    className=\"orderImg\"\r\n                    src={item.productId.productPictures[0].img}\r\n                  />\r\n                </div>\r\n                <div className=\"orderRow\">\r\n                  <div className=\"orderName\">{item.productId.name}</div>\r\n                  <div className=\"orderPrice\">\r\n                    <BiRupee />\r\n                    {item.payablePrice}\r\n                  </div>\r\n                  <div>{order.paymentStatus}</div>\r\n                </div>\r\n              </Link>\r\n            </Card>\r\n          ));\r\n        })}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\ProductListPage\\ClothingAndAccessories\\index.js",["232","233"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductsBySlug } from \"../../../actions\";\r\nimport Card from \"../../../components/UI/Card\";\r\nimport { BiRupee } from \"react-icons/bi\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function ClothingAndAccessories\r\n **/\r\n\r\nconst ClothingAndAccessories = (props) => {\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const { match } = props;\r\n    dispatch(getProductsBySlug(match.params.slug));\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\" }}>\r\n      <Card\r\n        style={{\r\n          boxSizing: \"border-box\",\r\n          padding: \"10px\",\r\n          display: \"flex\",\r\n        }}\r\n      >\r\n        {product.products.map((product) => (\r\n          <div className=\"caContainer\">\r\n            <Link\r\n              className=\"caImgContainer\"\r\n              to={`/${product.slug}/${product._id}/p`}\r\n            >\r\n              <img src={product.productPictures[0].img} />\r\n            </Link>\r\n            <div>\r\n              <div className=\"caProductName\">{product.name}</div>\r\n              <div className=\"caProductPrice\">\r\n                <BiRupee />\r\n                {product.price}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClothingAndAccessories;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\containers\\OrderDetailsPage\\index.js",["234"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getOrder } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Card from \"../../components/UI/Card\";\r\nimport Price from \"../../components/UI/Price\";\r\n\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author\r\n * @function OrderDetails\r\n **/\r\n\r\nconst OrderDetailsPage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const orderDetails = useSelector((state) => state.user.orderDetails);\r\n\r\n  useEffect(() => {\r\n    console.log({ props });\r\n    const payload = {\r\n      orderId: props.match.params.orderId,\r\n    };\r\n    dispatch(getOrder(payload));\r\n  }, []);\r\n\r\n  const formatDate = (date) => {\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const formatDate2 = (date) => {\r\n    const month = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ];\r\n    if (date) {\r\n      const d = new Date(date);\r\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\r\n    }\r\n  };\r\n\r\n  if (!(orderDetails && orderDetails.address)) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div\r\n        style={{\r\n          width: \"1160px\",\r\n          margin: \"10px auto\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            margin: \"10px 0\",\r\n          }}\r\n        >\r\n          <div className=\"delAdrContainer\">\r\n            <div className=\"delAdrDetails\">\r\n              <div className=\"delTitle\">Delivery Address</div>\r\n              <div className=\"delName\">{orderDetails.address.name}</div>\r\n              <div className=\"delAddress\">{orderDetails.address.address}</div>\r\n              <div className=\"delPhoneNumber\">\r\n                Phone number {orderDetails.address.mobileNumber}\r\n              </div>\r\n            </div>\r\n            <div className=\"delMoreActionContainer\">\r\n              <div className=\"delTitle\">More Actions</div>\r\n              <div className=\"delName\">Download Invoice</div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n\r\n        {orderDetails.items.map((item, index) => (\r\n          <Card\r\n            style={{ display: \"flex\", padding: \"20px 0\", margin: \"10px 0\" }}\r\n          >\r\n            <div className=\"flexRow\">\r\n              <div className=\"delItemImgContainer\">\r\n                <img src={item.productId.productPictures[0].img} alt=\"\" />\r\n              </div>\r\n              <div style={{ width: \"250px\" }}>\r\n                <div className=\"delItemName\">{item.productId.name}</div>\r\n                <Price value={item.payablePrice} />\r\n              </div>\r\n            </div>\r\n            <div style={{ padding: \"25px 50px\" }}>\r\n              <div className=\"orderTrack\">\r\n                {orderDetails.orderStatus.map((status) => (\r\n                  <div\r\n                    className={`orderStatus ${\r\n                      status.isCompleted ? \"active\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`point ${status.isCompleted ? \"active\" : \"\"}`}\r\n                    ></div>\r\n                    <div className=\"orderInfo\">\r\n                      <div className=\"status\">{status.type}</div>\r\n                      <div className=\"date\">{formatDate(status.date)}</div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div style={{ fontWeight: \"500\", fontSize: 14 }}>\r\n              {orderDetails.orderStatus[3].isCompleted &&\r\n                `Delivered on ${formatDate2(orderDetails.orderStatus[3].date)}`}\r\n            </div>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default OrderDetailsPage;\r\n","E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Price.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Cart.js",[],"E:\\mern-ecommerce\\flipkart-clone\\src\\components\\UI\\Rating.js",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":22,"column":6,"nodeType":"241","endLine":22,"endColumn":25,"suggestions":"242"},{"ruleId":"239","severity":1,"message":"240","line":27,"column":6,"nodeType":"241","endLine":27,"endColumn":25,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":13,"column":18,"nodeType":"246","messageId":"247","endLine":13,"endColumn":20},{"ruleId":"244","severity":1,"message":"245","line":27,"column":20,"nodeType":"246","messageId":"247","endLine":27,"endColumn":22},{"ruleId":"248","severity":1,"message":"249","line":51,"column":2,"nodeType":"250","endLine":84,"endColumn":3},{"ruleId":"251","severity":1,"message":"252","line":52,"column":6,"nodeType":"253","messageId":"254","endLine":81,"endColumn":7},{"ruleId":"255","severity":1,"message":"256","line":2,"column":8,"nodeType":"257","messageId":"258","endLine":2,"endColumn":14},{"ruleId":"255","severity":1,"message":"259","line":4,"column":8,"nodeType":"257","messageId":"258","endLine":4,"endColumn":18},{"ruleId":"255","severity":1,"message":"260","line":5,"column":26,"nodeType":"257","messageId":"258","endLine":5,"endColumn":35},{"ruleId":"255","severity":1,"message":"261","line":13,"column":26,"nodeType":"257","messageId":"258","endLine":13,"endColumn":38},{"ruleId":"255","severity":1,"message":"262","line":28,"column":10,"nodeType":"257","messageId":"258","endLine":28,"endColumn":15},{"ruleId":"255","severity":1,"message":"263","line":28,"column":17,"nodeType":"257","messageId":"258","endLine":28,"endColumn":25},{"ruleId":"264","severity":1,"message":"265","line":74,"column":15,"nodeType":"266","endLine":74,"endColumn":39},{"ruleId":"264","severity":1,"message":"265","line":100,"column":11,"nodeType":"266","endLine":106,"endColumn":12},{"ruleId":"264","severity":1,"message":"265","line":128,"column":13,"nodeType":"266","endLine":134,"endColumn":14},{"ruleId":"264","severity":1,"message":"267","line":213,"column":11,"nodeType":"266","endLine":213,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":216,"column":11,"nodeType":"266","endLine":216,"endColumn":45},{"ruleId":"264","severity":1,"message":"265","line":251,"column":15,"nodeType":"266","endLine":251,"endColumn":35},{"ruleId":"239","severity":1,"message":"240","line":18,"column":6,"nodeType":"241","endLine":18,"endColumn":8,"suggestions":"268"},{"ruleId":"248","severity":1,"message":"249","line":14,"column":1,"nodeType":"250","endLine":69,"endColumn":3},{"ruleId":"251","severity":1,"message":"252","line":15,"column":3,"nodeType":"253","messageId":"254","endLine":66,"endColumn":4},{"ruleId":"255","severity":1,"message":"269","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"270","line":23,"column":6,"nodeType":"241","endLine":23,"endColumn":8,"suggestions":"271"},{"ruleId":"248","severity":1,"message":"249","line":1,"column":1,"nodeType":"250","endLine":17,"endColumn":2},{"ruleId":"239","severity":1,"message":"272","line":27,"column":8,"nodeType":"241","endLine":27,"endColumn":10,"suggestions":"273"},{"ruleId":"248","severity":1,"message":"249","line":18,"column":1,"nodeType":"250","endLine":61,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":22,"column":5,"nodeType":"253","messageId":"254","endLine":57,"endColumn":6},{"ruleId":"239","severity":1,"message":"270","line":32,"column":8,"nodeType":"241","endLine":32,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":54,"column":29,"nodeType":"266","endLine":54,"endColumn":107},{"ruleId":"264","severity":1,"message":"267","line":91,"column":33,"nodeType":"266","endLine":91,"endColumn":45},{"ruleId":"264","severity":1,"message":"267","line":92,"column":33,"nodeType":"266","endLine":92,"endColumn":45},{"ruleId":"264","severity":1,"message":"267","line":93,"column":33,"nodeType":"266","endLine":93,"endColumn":45},{"ruleId":"264","severity":1,"message":"267","line":94,"column":33,"nodeType":"266","endLine":94,"endColumn":45},{"ruleId":"239","severity":1,"message":"240","line":42,"column":6,"nodeType":"241","endLine":42,"endColumn":25,"suggestions":"277"},{"ruleId":"248","severity":1,"message":"249","line":17,"column":1,"nodeType":"250","endLine":45,"endColumn":2},{"ruleId":"251","severity":1,"message":"252","line":18,"column":5,"nodeType":"253","messageId":"254","endLine":43,"endColumn":6},{"ruleId":"248","severity":1,"message":"249","line":13,"column":1,"nodeType":"250","endLine":94,"endColumn":3},{"ruleId":"251","severity":1,"message":"252","line":14,"column":3,"nodeType":"253","messageId":"254","endLine":91,"endColumn":4},{"ruleId":"239","severity":1,"message":"240","line":173,"column":8,"nodeType":"241","endLine":173,"endColumn":27,"suggestions":"278"},{"ruleId":"239","severity":1,"message":"279","line":189,"column":8,"nodeType":"241","endLine":189,"endColumn":28,"suggestions":"280"},{"ruleId":"255","severity":1,"message":"281","line":42,"column":16,"nodeType":"257","messageId":"258","endLine":42,"endColumn":21},{"ruleId":"239","severity":1,"message":"282","line":97,"column":8,"nodeType":"241","endLine":97,"endColumn":22,"suggestions":"283"},{"ruleId":"239","severity":1,"message":"240","line":24,"column":6,"nodeType":"241","endLine":24,"endColumn":8,"suggestions":"284"},{"ruleId":"275","severity":1,"message":"276","line":47,"column":19,"nodeType":"266","endLine":50,"endColumn":21},{"ruleId":"239","severity":1,"message":"270","line":23,"column":6,"nodeType":"241","endLine":23,"endColumn":8,"suggestions":"285"},{"ruleId":"275","severity":1,"message":"276","line":40,"column":15,"nodeType":"266","endLine":40,"endColumn":78},{"ruleId":"239","severity":1,"message":"270","line":25,"column":6,"nodeType":"241","endLine":25,"endColumn":8,"suggestions":"286"},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["289"],["290"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'MenuHeader' is defined but never used.","'IoIosCart' is defined but never used.","'getCartItems' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["291"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.location.search'. Either include them or remove the dependency array.",["293"],["294"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["295"],["296"],"React Hook useEffect has missing dependencies: 'confirmOrder' and 'props.history'. Either include them or remove the dependency array.",["297"],"'setId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'address', 'addressType', 'alternatePhone', 'cityDistrictTown', 'id', 'landmark', 'locality', 'mobileNumber', 'name', 'pinCode', 'props', 'state', 'submitFlag', and 'user'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["298"],["299"],["300"],["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"302","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"307","fix":"311"},{"desc":"302","fix":"312"},{"desc":"302","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"305","fix":"318"},{"desc":"307","fix":"319"},{"desc":"307","fix":"320"},"Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"321","text":"322"},{"range":"323","text":"322"},"Update the dependencies array to be: [dispatch]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, props]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, props.location.search]",{"range":"328","text":"329"},{"range":"330","text":"327"},{"range":"331","text":"322"},{"range":"332","text":"322"},"Update the dependencies array to be: [confirmOrder, props.history, user.placedOrderId]",{"range":"333","text":"334"},"Update the dependencies array to be: [address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",{"range":"335","text":"336"},{"range":"337","text":"325"},{"range":"338","text":"327"},{"range":"339","text":"327"},[830,849],"[auth.authenticate, dispatch]",[946,965],[410,412],"[dispatch]",[761,763],"[dispatch, props]",[829,831],"[dispatch, props.location.search]",[1021,1023],[1155,1174],[6239,6258],[6715,6735],"[confirmOrder, props.history, user.placedOrderId]",[3074,3088],"[address, addressType, alternatePhone, cityDistrictTown, id, landmark, locality, mobileNumber, name, pinCode, props, state, submitFlag, user, user.address]",[680,682],[684,686],[676,678]]